//=========================================================================================================================
// 
// リザルト処理 [resule.cpp]
// Author : Eisuke Sakagawa
// 
//=========================================================================================================================

//*************************************************************************************************************************
// インクルードファイル
//*************************************************************************************************************************
#include "result.h"		// リザルト
#include "input.h"		// 入力処理
#include "game.h"		// ゲーム
#include "bgwindow.h"	// 背景
#include "fade.h"		// フェード
#include "sound.h"		// サウンド

//*************************************************************************************************************************
// マクロ定義
//*************************************************************************************************************************

//*************************************************************************************************************************
// グローバル変数
//*************************************************************************************************************************
int						g_nCntResuleTimer;					// 時間カウンタ

//=========================================================================================================================
// リザルト初期化処理
//=========================================================================================================================
void InitResult(void)
{
	g_nCntResuleTimer = 0;		// 時間カウンタを初期化

	GAMESTATE game = GetGameState();	// ゲーム状態取得
	if (game == GAMESTATE_GAMECLEAR)
	{// ゲームクリアの場合
		SetBGWindow(D3DXVECTOR3(SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, 0.0f), D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f), SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, BGWINDOWTEXTURE_RESULT_CLEAR);
		PlaySound(SOUND_LABEL_BGM_GAME_CLEAR);
	}
	else
	{// ゲームオーバーの場合
		SetBGWindow(D3DXVECTOR3(SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, 0.0f), D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f), SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, BGWINDOWTEXTURE_RESULT_OVER);
		PlaySound(SOUND_LABEL_BGM_GAME_OVER);
	}
}

//=========================================================================================================================
// リザルト終了処理
//=========================================================================================================================
void UninitResult(void)
{

}

//=========================================================================================================================
// リザルト更新処理
//=========================================================================================================================
void UpdateResult(void)
{
	g_nCntResuleTimer++;		// 時間を進める

	if (GetKeyboardTrigger(DIK_RETURN) == true || GetKeyboardTrigger(DIK_Z) == true || g_nCntResuleTimer > 180)
	{// 任意のキー（ENTER)を押した場合、一定秒数進んだ場合
		SetFadeMode(MODE_TITLE);		// タイトルへ
	}
}

//=========================================================================================================================
// リザルト描画処理
//=========================================================================================================================
void DrawResult(void)
{

}