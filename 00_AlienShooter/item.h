//=========================================================================================================================
// 
// アイテム処理 [item.h]
// Author : Eisuke Sakagawa
// 
//=========================================================================================================================
#ifndef _ITEM_H_
#define _ITEM_H_

//*************************************************************************************************************************
// インクルードファイル
//*************************************************************************************************************************
#include "main.h"

//*************************************************************************************************************************
// 構造体定義
//*************************************************************************************************************************
typedef enum
{// アイテム種類
	ITEMTYPE_POWER = 0,		// パワー
	ITEMTYPE_LIFE,			// ライフ
	ITEMTYPE_STAR,			// スター
	ITEMTYPE_MAX			// 最大数
}ITEMTYPE;

typedef struct
{// 状態
	D3DXVECTOR3 pos;		// 位置
	D3DXVECTOR3 move;		// 移動量
	int nCntPos;			// カウント
	ITEMTYPE Type;			// 種類
	bool bDisp;				// 表示
}ItemState;

//*************************************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************************************
void InitItem(void);				// アイテム初期化処理
void UninitItem(void);				// アイテム終了処理
void UpdateItem(void);				// アイテム更新処理
void DrawItem(void);				// アイテム描画処理

void SetItem(D3DXVECTOR3 pos, ITEMTYPE type);	// アイテム設定処理
void HitItem(int nCntItem);			// アイテムヒット処理

#endif