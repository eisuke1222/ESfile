//=========================================================================================================================
// 
// エフェクト処理 [effect.h]
// Author : Eisuke Sakagawa
// 
//=========================================================================================================================
#ifndef _EFFECT_H_
#define _EFFECT_H_

//*************************************************************************************************************************
// インクルードファイル
//*************************************************************************************************************************
#include "main.h"	// メイン

//*************************************************************************************************************************
// 構造体定義
//*************************************************************************************************************************
typedef enum
{// 種類
	EFFECTTYPE_NONE = 0,		// 何もしていない
	EFFECTTYPE_BULLET,			// 弾
	EFFECTTYPE_EXPLOSION,		// 爆発
	EFFECTTYPE_RESURRECTION,	// 復活
	EFFECTTYPE_MAX
}EFFECTTYPE;

typedef struct
{
	D3DXVECTOR3 pos;			// 位置
	D3DXVECTOR3 move;			// 移動値
	D3DXCOLOR col;				// 色
	EFFECTTYPE Type;			// 種類
	float fRadius;				// 半径(大きさ)
	int nLife;					// 表示時間(寿命)
	bool bUse;					// 使用しているかどうか
} EFFECT;

//*************************************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************************************
void InitEffect(void);			// エフェクト初期化処理
void UninitEffect(void);		// エフェクト終了処理
void UpdateEffect(void);		// エフェクト更新処理
void DrawEffect(void);			// エフェクト描画処理

void SetBulletEffect(D3DXVECTOR3 pos, D3DXCOLOR col, EFFECTTYPE Type, float fRadius, int nLife);	// 弾エフェクト設定処理
void SetParticleEffect(D3DXVECTOR3 pos, EFFECTTYPE Type, int nSetMax, int nRadius, int nLife);		// 爆発エフェクト設定処理

#endif