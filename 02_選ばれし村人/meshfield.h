//=========================================================================================================================
//
// フィールド処理 [meshfield.h]
// Author : Eisuke Sakagawa
//
//=========================================================================================================================
#ifndef _MESHFIELD_H_
#define _MESHFIELD_H_

//*************************************************************************************************************************
// インクルードファイル
//*************************************************************************************************************************
#include "main.h"

//*************************************************************************************************************************
// マクロ定義
//*************************************************************************************************************************

//*************************************************************************************************************************
// 構造体定義
//*************************************************************************************************************************
typedef struct
{
	D3DXVECTOR3	pos;			// フィールドの位置
	D3DXVECTOR3	rot;			// フィールドの向き
	D3DXVECTOR3	num;			// フィールドの数
	D3DXVECTOR3	fRadius;		// フィールドの半径
	D3DXVECTOR3	tex;			// フィールドのtex
	int			MaxVtx;			// 頂点の最大数
	int			MaxIdx;			// インデックスの最大数
	int			MaxPolygon;		// ポリゴンの最大数
	int			nTexNum;		// テクスチャ番号
	D3DXMATRIX	mtxWorld;		// ワールドマトリックス
	bool		bUse;			// 使用しているか
}MeshField;

//*************************************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************************************
void InitMeshField(void);		// フィールドの初期化処理
void UninitMeshField(void);		// フィールドの終了処理
void UpdateMeshField(void);		// フィールドの更新処理
void DrawMeshField(void);		// フィールドの描画処理

void SetMeshField(int SetNum, int nTexNum);		// フィールドの設定処理
bool CollisionMeshField(D3DXVECTOR3 *pPos, D3DXVECTOR3 *pPosOld, D3DXVECTOR3 *pMove, D3DXVECTOR3 *vtxMin, D3DXVECTOR3 *vtxMax);		// フィールドの衝突処理
void DeleteMeshField(void);

#endif
