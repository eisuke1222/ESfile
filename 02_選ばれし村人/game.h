//=========================================================================================================================
//
// ゲーム処理 [game.h]
// Author : Eisuke Sakagawa
//
//=========================================================================================================================
#ifndef _GAME_H_
#define _GAME_H_

//*************************************************************************************************************************
// インクルードファイル
//*************************************************************************************************************************
#include "main.h"

//*************************************************************************************************************************
// 構造体定義
//*************************************************************************************************************************
typedef enum
{// ゲーム状態
	GAMESTATE_NONE = 0,
	GAMESTATE_TUTORIAL,
	GAMESTATE_PLAY,
	GAMESTATE_GAMECLEAR,
	GAMESTATE_GAMEOVER,
	GAMESTATE_MAX,
}GAMESTATE;

//*************************************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************************************
void InitGame(void);			// ゲームの初期化処理
void UninitGame(void);			// ゲームの終了処理
void UpdateGame(void);			// ゲームの更新処理
void DrawGame(void);			// ゲームの描画処理

void SetGameState(GAMESTATE state); // ゲーム状態設定
GAMESTATE GetGameState(void);		// ゲーム状態取得
void SetPauseState(bool bPause);	// ポーズ状態設定
bool GetPauseState(void);			// ポーズ状態取得
void SetTutorialStep(bool bTutorial);
void SetPlayerRespawn(int nRespawn);
void SetMapReset(int ResetMap);
int GetNowMap(void);

#endif
